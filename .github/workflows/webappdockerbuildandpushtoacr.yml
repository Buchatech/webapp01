# This workflow will build and push an application to a Azure Container Registry (ACR) when you push your code
#
# This workflow assumes you have already created the target Azure Container Registry (ACR)
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these can be found at https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# 2. Set the following environment variables (or replace the values below):
#    - AZURE_CONTAINER_REGISTRY (name of your container registry / ACR)
#    - RESOURCE_GROUP (where your cluster is deployed)
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)
#    - IMAGE_PULL_SECRET_NAME (name of the ImagePullSecret that will be created to pull your ACR image)
#    - DEPLOYMENT_MANIFEST_PATH (path to the manifest yaml for your deployment)
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login

name: Build and push to ACR

# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
 # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "acrtemp51222"
  CONTAINER_NAME: "webapp"
  RESOURCE_GROUP: "ACR-CICD-AKS-Temp-5-12-22-01-RG"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@v3
    
    # Logs in with your Azure credentials
    # SP used: github-sp-429022-02
    - name: Azure login
      #uses: azure/login@v1.4.3
      uses: azure/login@v1
      with:
        creds: '${{ secrets.aks_cicdakstemp5122201_kubeConfig }}'
      
    - name: 'Run Azure CLI commands'
      run: |
          az account show
          az group list
          pwd 

    # Builds and pushes an image up to your Azure Container Registry
    - name: Build and push image to ACR
      run: |
        az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
